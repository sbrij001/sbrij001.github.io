{"ast":null,"code":"export default function formatNum(num) {\n  var si = [{\n    value: 1,\n    symbol: \"\"\n  }, {\n    value: 1e3,\n    symbol: \"k\"\n  }, {\n    value: 1e6,\n    symbol: \"m\"\n  }, {\n    value: 1e9,\n    symbol: \"g\"\n  }, {\n    value: 1e12,\n    symbol: \"t\"\n  }, {\n    value: 1e15,\n    symbol: \"p\"\n  }, {\n    value: 1e18,\n    symbol: \"e\"\n  }];\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var i;\n\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n\n  return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}","map":{"version":3,"sources":["/Users/shivanibrijmohan/Desktop/sbrij001.github.io/src/components/format-number.js"],"names":["formatNum","num","si","value","symbol","rx","i","length","toFixed","replace"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,MAAIC,EAAE,GAAG,CACP;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GADO,EAEP;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAFO,EAGP;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAHO,EAIP;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAJO,EAKP;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GALO,EAMP;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GANO,EAOP;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAPO,CAAT;AASA,MAAIC,EAAE,GAAG,0BAAT;AACA,MAAIC,CAAJ;;AACA,OAAKA,CAAC,GAAGJ,EAAE,CAACK,MAAH,GAAY,CAArB,EAAwBD,CAAC,GAAG,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAClC,QAAIL,GAAG,IAAIC,EAAE,CAACI,CAAD,CAAF,CAAMH,KAAjB,EAAwB;AACtB;AACD;AACF;;AACD,SAAO,CAACF,GAAG,GAAGC,EAAE,CAACI,CAAD,CAAF,CAAMH,KAAb,EAAoBK,OAApB,CAA4B,CAA5B,EAA+BC,OAA/B,CAAuCJ,EAAvC,EAA2C,IAA3C,IAAmDH,EAAE,CAACI,CAAD,CAAF,CAAMF,MAAhE;AACD","sourcesContent":["export default function formatNum(num) {\n  let si = [\n    { value: 1, symbol: \"\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"m\" },\n    { value: 1e9, symbol: \"g\" },\n    { value: 1e12, symbol: \"t\" },\n    { value: 1e15, symbol: \"p\" },\n    { value: 1e18, symbol: \"e\" }\n  ];\n  let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}\n"]},"metadata":{},"sourceType":"module"}